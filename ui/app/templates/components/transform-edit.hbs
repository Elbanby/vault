<PageHeader as |p|>
  <p.top>
    {{key-value-header
      baseKey=model
      path="vault.cluster.secrets.backend.list"
      mode=mode
      root=root
      showCurrent=true
    }}
  </p.top>
  <p.levelLeft>
    <h1 class="title is-3" data-test-secret-header="true">
      {{#if (eq mode "create") }}
        Create Transformation
      {{else if (eq mode 'edit')}}
        Edit Transformation
      {{else}}
        Transformation <code>{{model.id}}</code>
      {{/if}}
    </h1>
  </p.levelLeft>
</PageHeader>

{{#if (eq mode "show")}}
  <Toolbar>
    <ToolbarActions>
      {{!-- TODO: update these actions, show delete grey out if not allowed --}}
      {{#if (or model.canUpdate model.canDelete)}}
        <div class="toolbar-separator" />
      {{/if}}
      {{#if model.canDelete}}
        <ConfirmAction
          @buttonClasses="toolbar-link"
          @onConfirmAction={{action "delete"}}
        >
          Delete transformation
        </ConfirmAction>
      {{/if}}
      {{#if (or model.canUpdate model.canDelete)}}
        <ToolbarSecretLink
          @secret={{model.id}}
          @mode="edit"
          @data-test-edit-link=true
          @replace=true
        >
          Edit transformation
        </ToolbarSecretLink>
      {{/if}}
    </ToolbarActions>
  </Toolbar>
{{/if}}

{{#if (or (eq mode 'edit') (eq mode 'create'))}}
  <TransformEditForm @mode={{mode}} @model={{model}} />
{{else}}
{{!-- TODO eventually turn this into a component once it's fleshed out --}}
<div class="box is-fullwidth is-sideless is-paddingless is-marginless">
  {{#each model.transformFieldAttrs as |attr|}}
    {{#if (eq attr.type "object")}}
      {{info-table-row label=(capitalize (or attr.options.label (humanize (dasherize attr.name)))) value=(stringify (get model attr.name))}}
    {{else}}
      {{info-table-row label=(capitalize (or attr.options.label (humanize (dasherize attr.name)))) value=(get model attr.name)}}
    {{/if}}
  {{/each}}
</div>

<div class="has-top-margin-xl has-bottom-margin-s">
  <label class="title has-border-bottom-light page-header">CLI Commands</label>
  {{!-- ARG TODO make these components? --}}
  <div>
    <h2 class="title is-6">Encode</h2>
    <div class="has-bottom-margin-s">
      <span class="helper-text has-text-grey">
        To test the encoding capability of your transformation, use the following command. It will output an encoded_value.
      </span>
    </div>
    <div class="copy-text level">
      <code>vault write transform/encode/payments value=&lt;enter your value here&gt;</code>
      <CopyButton class="button is-transparent level-right" @clipboardText='blahblah'
        @buttonType="button" @success={{action (set-flash-message 'Command copied!')}}>
        <Icon @size='l' @glyph="copy-action" aria-label="Copy" />
      </CopyButton>
    </div>
  </div>
  <div>
    <h2 class="title is-6">Decode</h2>
    <div class="has-bottom-margin-s">
      <span class="helper-text has-text-grey">
        To test decoding capability of your transformation, use the encoded_value in the following command. It should return your original input.
      </span>
    </div>
    <div class="copy-text level">
      <code>vault write transform/decode/payments value=&lt;enter your value here&gt;</code>
      <CopyButton class="button is-transparent level-right" @clipboardText='blahblah'
        @buttonType="button" @success={{action (set-flash-message 'Command copied!')}}>
        <Icon @size='l' @glyph="copy-action" aria-label="Copy" />
      </CopyButton>
    </div>
  </div> 
</div>
{{/if}}
